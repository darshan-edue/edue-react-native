/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/courses`; params?: Router.UnknownInputParams; } | { pathname: `/login`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownInputParams; } | { pathname: `/components/DrawingCanvas`; params?: Router.UnknownInputParams; } | { pathname: `/components/MCQOptions`; params?: Router.UnknownInputParams; } | { pathname: `/components/MarkdownRenderer`; params?: Router.UnknownInputParams; } | { pathname: `/components/Sidebar`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/fragment-masking`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/gql`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/graphql`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/queries/getMyAssignments`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/fragments/assignment`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/fragments/textMessage`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/mutations/login`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/canvas/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/courses`; params?: Router.UnknownOutputParams; } | { pathname: `/login`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownOutputParams; } | { pathname: `/components/DrawingCanvas`; params?: Router.UnknownOutputParams; } | { pathname: `/components/MCQOptions`; params?: Router.UnknownOutputParams; } | { pathname: `/components/MarkdownRenderer`; params?: Router.UnknownOutputParams; } | { pathname: `/components/Sidebar`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/generated/fragment-masking`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/generated/gql`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/generated/graphql`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/generated`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/queries/getMyAssignments`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/fragments/assignment`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/fragments/textMessage`; params?: Router.UnknownOutputParams; } | { pathname: `/graphql/mutations/login`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } } | { pathname: `/canvas/[id]`, params: Router.UnknownOutputParams & { id: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/courses${`?${string}` | `#${string}` | ''}` | `/login${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/explore${`?${string}` | `#${string}` | ''}` | `/explore${`?${string}` | `#${string}` | ''}` | `/components/DrawingCanvas${`?${string}` | `#${string}` | ''}` | `/components/MCQOptions${`?${string}` | `#${string}` | ''}` | `/components/MarkdownRenderer${`?${string}` | `#${string}` | ''}` | `/components/Sidebar${`?${string}` | `#${string}` | ''}` | `/graphql/generated/fragment-masking${`?${string}` | `#${string}` | ''}` | `/graphql/generated/gql${`?${string}` | `#${string}` | ''}` | `/graphql/generated/graphql${`?${string}` | `#${string}` | ''}` | `/graphql/generated${`?${string}` | `#${string}` | ''}` | `/graphql/queries/getMyAssignments${`?${string}` | `#${string}` | ''}` | `/graphql/fragments/assignment${`?${string}` | `#${string}` | ''}` | `/graphql/fragments/textMessage${`?${string}` | `#${string}` | ''}` | `/graphql/mutations/login${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/courses`; params?: Router.UnknownInputParams; } | { pathname: `/login`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/explore` | `/explore`; params?: Router.UnknownInputParams; } | { pathname: `/components/DrawingCanvas`; params?: Router.UnknownInputParams; } | { pathname: `/components/MCQOptions`; params?: Router.UnknownInputParams; } | { pathname: `/components/MarkdownRenderer`; params?: Router.UnknownInputParams; } | { pathname: `/components/Sidebar`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/fragment-masking`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/gql`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated/graphql`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/generated`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/queries/getMyAssignments`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/fragments/assignment`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/fragments/textMessage`; params?: Router.UnknownInputParams; } | { pathname: `/graphql/mutations/login`; params?: Router.UnknownInputParams; } | `/+not-found` | `/canvas/${Router.SingleRoutePart<T>}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `/canvas/[id]`, params: Router.UnknownInputParams & { id: string | number; } };
    }
  }
}
